{"version":3,"sources":["Components/contactForm/ContactForm.js","Components/contactList/ContactList.js","Components/filter/Filter.js","App.js","index.js"],"names":["ContactForm","handleSubmit","inputId","name","number","onInputChange","className","onSubmit","htmlFor","type","pattern","title","required","value","onChange","ContactList","contacts","onDeleteContact","map","id","onClick","Filter","onSearchInput","App","shortid","generate","state","filter","evt","setState","target","filterContacts","getVisibleContacts","contact","toLowerCase","includes","preventDefault","addContact","valueName","valueNumber","data","alert","prevState","deleteContact","idContact","storageContacts","localStorage","getItem","parseStorageContacts","JSON","parse","this","prevProps","console","log","setItem","stringify","visibleContacts","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85aed38c.chunk.js","sourcesContent":["import './ContactForm.css';\r\n\r\nfunction ContactForm({ handleSubmit, inputId, name, number, onInputChange }) {\r\n    \r\n    return (\r\n        <div className=\"Container-form\">\r\n                    <form className=\"form\" onSubmit={handleSubmit}>\r\n                        <label htmlFor={inputId}>\r\n                            Name\r\n                            <br></br>\r\n                            <input\r\n                                className=\"Container-form__input\"\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                                required\r\n                                value={name}\r\n                                onChange={onInputChange}\r\n                                // id={props.inputId}\r\n                            />\r\n                        </label>\r\n                        <br></br>\r\n                        <label>\r\n                            Number\r\n                            <br></br>\r\n                            <input\r\n                                className=\"Container-form__input\"\r\n                                type=\"tel\"\r\n                                name=\"number\"\r\n                                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                                required\r\n                                value={number}\r\n                                onChange={onInputChange}\r\n                                // id={props.inputId}\r\n                            />\r\n                        </label>\r\n                        <br></br>\r\n                      <button type=\"submit\" className=\"Container-form__btn\">Add Contact</button>  \r\n                    </form>\r\n                 \r\n                </div>\r\n    )\r\n};\r\n\r\n\r\nexport default ContactForm;","import './ContactList.css';\r\n\r\nconst ContactList = ({contacts, onDeleteContact }) => {\r\n    \r\n    return (\r\n        <div className=\"Contact-container\">\r\n                <ul className=\"Contact-container__list\">\r\n                {contacts.map(({ id, name, number }) => (\r\n                    <li key={id} className=\"Contact-container__item\">{name}: {number}\r\n                        <button onClick={() => onDeleteContact(id)}>Delete</button>\r\n                    </li>\r\n                ))}\r\n                </ul>\r\n            </div>\r\n    )\r\n};\r\n\r\nexport default ContactList;","const Filter = ({ onSearchInput, value }) => {\r\n    \r\n    return (\r\n        <div>\r\n            <h3>Find contact by name</h3>\r\n            <label>\r\n                <input\r\n                    name=\"search\"\r\n                    type=\"text\"\r\n                    value={value}\r\n                    onChange={onSearchInput}\r\n                ></input>\r\n            </label>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\n\nimport './App.css';\nimport shortid from \"shortid\"\n\n// Components\nimport ContactForm from './Components/contactForm';\nimport ContactList from './Components/contactList';\nimport Filter from './Components/filter';\n\n\nclass App extends Component {\n  inputId = shortid.generate();\n\n  state = {\n    contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter: '',\n  name: '',\n  number: ''\n  };\n\n  onInputChange = evt => {\n        this.setState({\n            [evt.target.name]: evt.target.value\n        });\n  };\n  \n  filterContacts = evt => this.setState({ filter: evt.target.value });\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    \n    return contacts.filter(\n      contact => contact.name.toLowerCase().includes(filter.toLowerCase()));\n   \n  };\n  \n  handleSubmit = evt => {\n        evt.preventDefault();\n\n        this.addContact(this.state.name, this.state.number);\n        this.setState({ name: \"\", number: \"\" });\n  };\n  \n  addContact = (valueName, valueNumber) => {\n        const contactId = shortid.generate()\n        const data = { id: contactId, name: valueName, number: valueNumber };\n\n        this.state.contacts.map(contact => {\n            if (contact.name === valueName && contact.number === valueNumber) {\n                alert(`${valueName} is already in contacts!`)\n                return;\n            }  \n        });\n    this.setState(prevState =>\n            ({ contacts: [data, ...prevState.contacts] }));\n  };\n  \n  deleteContact = idContact => {\n        this.setState(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== idContact)}))\n  };\n\n  componentDidMount() {\n    const storageContacts = localStorage.getItem('contacts');\n    const parseStorageContacts = JSON.parse(storageContacts);\n    if(parseStorageContacts) this.setState({ contacts: parseStorageContacts });\n    \n  };\n  \n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('state is update!');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  };\n    \n  render() {\n    // const { filter, contacts } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"Container\">\n         <h2>Phonebook</h2>\n        <ContactForm\n          handleSubmit={this.handleSubmit}\n          inputId={this.inputId}\n          name={this.state.name}\n          number={this.state.number}\n          onInputChange={this.onInputChange}\n        />\n        \n        <h2>Contacts</h2>\n        \n        <Filter onSearchInput={this.filterContacts} value={this.state.filter} />\n        \n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n        \n      </div>\n    )\n  };\n};\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}